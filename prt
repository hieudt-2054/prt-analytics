set -e
GREEN='\033[0;32m'
WHITE='\033[1;37m'
YELLOW='\033[1;33m'
BLACK='\033[0;30m'
RED='\033[33;31m'

dataCloc={}
ciBranch=""
ciEvent=""

if [ $CI_BRANCH ]; then
    ciBranch=${CI_BRANCH}
fi

if [ $CI_WEBHOOK_EVENT ]; then
    ciEvent=${CI_WEBHOOK_EVENT}
fi

if [ $CIRCLECI ]; then
    echo curl "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PULL_REQUEST##*/}"
    curl "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PULL_REQUEST##*/}"
    ciBranch=`curl -s https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PULL_REQUEST##*/} | jq -r '.base.ref'`
    ciEvent=${CIRCLE_PULL_REQUEST}
fi

clocRunning() {
    echo -e "${YELLOW}> PRT Cloc running... ${GREEN}"
    echo "PATH CLOC : ${PATH_CLOC}"
    if [[ "$PATH_CLOC" == "all" ]]; then
        dataCloc=$(cloc $(git ls-files) --exclude-ext=phar,json --json)
    else
        dataCloc=$(cloc $PATH_CLOC --exclude-ext=phar,json --json)
    fi
    echo -e ${WHITE}
}

getCoverageHtmlPhp() {
    clocRunning
    echo -e "${YELLOW}> PRT Coverage (Html - PHP) running... ${GREEN}"
    echo -e "Branch: ${ciBranch}"
    value=$(echo "$(cat coverage/index.html)" | grep -Pzo '>Total</td>(.*\n.*){3}' | grep -Pzo '[0-9]{1,3}\.[0-9]{1,2}\% covered' | grep -Pzo '[0-9]{1,3}\.[0-9]{1,2}')
    echo -e "Token: ${TOKEN}"
    echo -e "Endpoint: ${ENDPOINT}"
    echo -e "Value: ${value}"
    echo -e "Cloc: ${dataCloc}"
    echo -e "CI Event: ${ciEvent}"
    curl -d "ci_event=${ciEvent}&code=${TOKEN}&value=$(echo ${value/./%2E})&branch=$(echo $ciBranch)&cloc=${dataCloc}" -X POST ${ENDPOINT} --trace-ascii /dev/stdout
}

getCoverageJsonRuby() {
    clocRunning
    echo -e "${YELLOW}> PRT Coverage (JSON - Ruby) running... ${GREEN}"
    echo -e "Branch: ${ciBranch}"
    value="$(cat coverage/.last_run.json | grep -oP '"covered_percent":\K[0-9, .]+')"
    echo -e "Token: ${TOKEN}"
    echo -e "Endpoint: ${ENDPOINT}"
    echo -e "Value: ${value}"
    echo -e "Cloc: ${dataCloc}"
    echo -e "CI Event: ${ciEvent}"
    curl -d "ci_event=${ciEvent}&code=${TOKEN}&value=$(echo ${value/./%2E})&branch=$(echo $ciBranch)&cloc=${dataCloc}" -X POST ${ENDPOINT} --trace-ascii /dev/stdout
}



case $1 in
    "cloc")
        clocRunning
        ;;
    "php-html")
        getCoverageHtmlPhp
        ;;
    "ruby-json")
        getCoverageJsonRuby
        ;;
    *)
        echo -e "${RED}Not found command"
        echo -e "${GREEN}Please follow guideline"
        echo -e ${WHITE}
        echo -e "Usage:"
        echo "prt <language: php|ruby>"
        echo "Example: prt php "
        exit
esac



